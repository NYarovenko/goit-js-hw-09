{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAmBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IA3BMO,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYd,EAAKY,EAALZ,MAAOe,EAAIH,EAAJG,KAAMC,EAAMJ,EAANI,QAwB7B,SAAmBhB,EAAOe,EAAMC,GAC9B,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAC/BnB,EAAcmB,EAAI,EAAGjB,EAAQiB,EAAIF,GAC9BG,MAAK,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALnB,MACjBqB,EAAAzB,GAAS0B,OAAOC,QAAQ,qBAAoCC,OAAfzB,EAAS,QAAYyB,OAANJ,EAAM,OAClEK,QAAQC,IAAI,uBAAwCF,OAAfzB,EAAS,QAAYyB,OAANJ,EAAM,M,IAE3DO,OAAM,SAAAR,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALnB,MAClBqB,EAAAzB,GAAS0B,OAAOM,QAAQ,oBAAmCJ,OAAfzB,EAAS,QAAYyB,OAANJ,EAAM,OACjEK,QAAQC,IAAI,sBAAqCF,OAAfzB,EAAS,QAAYyB,OAANJ,EAAM,M,IA9B7DS,CACEC,SAAS9B,EAAM+B,OACfD,SAASf,EAAKgB,OACdD,SAASd,EAAOe,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  promiseGo(\n    parseInt(delay.value),\n    parseInt(step.value),\n    parseInt(amount.value)\n  );\n  // event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction promiseGo(delay, step, amount) {\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i + 1, delay + i * step)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","step","amount","i","then","param","_$delay","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","$ce04d3a99e08e73b$var$promiseGo","parseInt","value"],"version":3,"file":"03-promises.3a9aa98d.js.map"}